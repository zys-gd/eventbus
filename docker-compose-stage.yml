version: '3.8'
services:
    node-api:
        image: ${DOCKER_REGISTRY}/eventbus-app-stage
        container_name: eventbus_node_api
        restart: always
        ports:
            - "3000:3000"
        command: npm run start:api:prod
        env_file:
            - .env
        environment:
            - TZ=Europe/Kiev
        depends_on:
            - mysql
            - rabbitmq
        networks:
            - eventbus

    event-consumer:
        image: ${DOCKER_REGISTRY}/eventbus-app-stage
        container_name: eventbus_node_consumer
        restart: always
        command: npm run start:api:prod
        env_file:
            - .env
        environment:
            - QUEUE_NAME=${EVENT_QUEUE_NAME}
            - TZ=Europe/Kiev
        depends_on:
            - mysql
            - rabbitmq
        networks:
            - eventbus

    notification-consumer:
        image: ${DOCKER_REGISTRY}/eventbus-app-stage
        container_name: eventbus_notification_consumer
        restart: always
        command: npm run start:consumer:prod
        env_file:
            - .env
        environment:
            - QUEUE_NAME=${NOTIFICATION_QUEUE_NAME}
            - TZ=Europe/Kiev
        depends_on:
            - mysql
            - rabbitmq
        networks:
            - eventbus

    mysql:
        container_name: eventbus_mysql
        image: library/mysql:8
        volumes:
            - db:/var/lib/mysql
            - .docker/mysql:/docker-entrypoint-initdb.d/
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        healthcheck:
            test: mysqladmin -uroot -p${MYSQL_ROOT_PASSWORD} status >/dev/null 2>/dev/null
            interval: 10s
            timeout: 10s
            retries: 5
        environment:
            - MYSQL_DATABASE
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_ROOT_PASSWORD
            - TZ=Europe/Kiev
        networks:
            - eventbus

    rabbitmq:
        container_name: eventbus_rabbitmq
        image: library/rabbitmq:3.8-management
        restart: always
        hostname: eventbus-rmq
        environment:
            - TZ=Europe/Kiev
        ports:
            - "15672:15672"
        volumes:
            - rabbitmq:/var/lib/rabbitmq/
        healthcheck:
            test: rabbitmq-diagnostics ping >/dev/null 2>/dev/null
            interval: 10s
            timeout: 10s
            retries: 5
        networks:
            - eventbus

    apidoc:
        image: swaggerapi/swagger-ui
        restart: always
        ports:
            - "3001:8080"
        volumes:
            - ./documentation/:/usr/share/nginx/html/documentation/
        environment:
            URLS: "[ { url: './documentation/apidoc.yml', name: 'EventBus Service' } ]"
        networks:
            - eventbus

volumes:
    rabbitmq:
    db:

networks:
    eventbus:
        driver: bridge
